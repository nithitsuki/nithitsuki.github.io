<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nithitsuki&#39;s Website</title>
    <link>https://nithitsuki.com/</link>
    <description>Recent content on Nithitsuki&#39;s Website</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Oct 2022 12:04:08 +0530</lastBuildDate>
    <atom:link href="https://nithitsuki.com/index.xml" rel="self" type="application/rss+xml" />
          <item>
            <title>Software I use and recommend</title>
            <link>https://nithitsuki.com/blogs/software-i-use-and-recommend/</link>
            <pubDate>Sun, 09 Oct 2022 12:04:08 +0530</pubDate>
            <guid>https://nithitsuki.com/blogs/software-i-use-and-recommend/</guid>
            <description>&lt;p&gt;This is a page I made for the software I use, and think might be useful for others in finding better programs.&#xA;I&amp;rsquo;m only going to write about programs I have used for a while and tested to be true.&lt;/p&gt;&#xA;&lt;br style=&#34;line-height: 1.9em;&#34;&gt;&#xA;&lt;h1 id=&#34;my-philosophy-in-choosing-good-software&#34;&gt;My &amp;lsquo;Philosophy&amp;rsquo; in choosing good software&lt;/h1&gt;&#xA;&lt;p&gt;The software must run well on slow hardware with minimal resources, most users over-estimate the amount of power required to complete simple tasks.&#xA;So, i usually only seek &amp;ldquo;Minimal&amp;rdquo; and efficiently written software with enough features to get the work done.&#xA;If the software is slow to run, even on my main computer, it doesn&amp;rsquo;t get to stay.&#xA;also, most importantly, I &lt;em&gt;ONLY&lt;/em&gt; use &lt;a href=&#34;https://en.wikipedia.org/wiki/Free_and_open-source_software#Privacy_and_security&#34;&gt;FOSS&lt;/a&gt; (Free and Open Source Software). No exceptions. Period.&lt;/p&gt;&#xA;&lt;br style=&#34;line-height: 1.9em;&#34;&gt;&#xA;&lt;h1 id=&#34;basic-software&#34;&gt;Basic Software&lt;/h1&gt;&#xA;&lt;h2 id=&#34;operating-system&#34;&gt;Operating System&lt;/h2&gt;&#xA;&lt;p&gt;I currently use &lt;a href=&#34;https://archlinux.org/&#34;&gt;Arch-Linux&lt;/a&gt; (because of it&amp;rsquo;s up-to-date packages,aur and simplicity)&#xA;and &lt;a href=&#34;https://www.gentoo.org/&#34;&gt;Gentoo&lt;/a&gt; (on my super old laptop because it&amp;rsquo;s very slow and needs to be efficient).&#xA;(warning: These OS&amp;rsquo;s require somewhat of a beforehand Unix environment knowledge to work with them smoothly. I don&amp;rsquo;t recommend any of these operating system to users without intermediary knowledge in them.)&lt;/p&gt;&#xA;&lt;h2 id=&#34;here-are-the-operating-systems-ive-used-and-think-might-fit-you&#34;&gt;Here are the operating systems I&amp;rsquo;ve used and think might fit you:&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://linuxmint.com/&#34;&gt;Linux Mint&lt;/a&gt; My parents use it, It&amp;rsquo;s the best OS for those who aren&amp;rsquo;t interested in becoming an Unix-System-Manager for an IT company. It works with other technology out of the box&#xA;I recommend it to anyone who asks &amp;ldquo;What operating system is the_best/should_I_use&amp;rdquo;&lt;/p&gt;&#xA;&lt;h2 id=&#34;shell&#34;&gt;Shell&lt;/h2&gt;&#xA;&lt;p&gt;I use &lt;a href=&#34;https://www.zsh.org/&#34;&gt;zsh&lt;/a&gt; as a shell, with a slight modification of &lt;a href=&#34;https://raw.githubusercontent.com/LukeSmithxyz/voidrice/master/.config/zsh/.zshrc&#34;&gt;Luke smith&amp;rsquo;s .zshrc&lt;/a&gt; It practically has all of the features of other shells with extra plugins for auto-completion and syntax highlighting.&lt;/p&gt;&#xA;&lt;h2 id=&#34;programming&#34;&gt;Programming&lt;/h2&gt;&#xA;&lt;p&gt;I use &lt;a href=&#34;https://www.vim.org/&#34;&gt;vim&lt;/a&gt; with some plugins as an IDE and use&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Shell scripts (for simple automation), and&lt;/li&gt;&#xA;&lt;li&gt;GCC &amp;amp; GDB (for a bit more in-depth programming)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;other&#34;&gt;Other&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://htop.dev/&#34;&gt;htop&lt;/a&gt; to easily manage proccess&amp;rsquo;s&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://tmux.github.io&#34;&gt;tmux&lt;/a&gt; since 1 tty is never enough&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ftp.gnu.org/gnu/&#34;&gt;tar,gzip,bzip&lt;/a&gt; to backup/send files&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.cups.org/&#34;&gt;cups&lt;/a&gt; to take printouts of documents&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://rsync.samba.org/&#34;&gt;rsync&lt;/a&gt; to manage files locally and remotely&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.openssh.com/&#34;&gt;openssh&lt;/a&gt; to connect to other systems&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;utilities&#34;&gt;Utilities&lt;/h1&gt;&#xA;&lt;h2 id=&#34;documents--e-books&#34;&gt;Documents &amp;amp; E-Books&lt;/h2&gt;&#xA;&lt;p&gt;I use &lt;a href=&#34;https://pwmt.org/projects/zathura/&#34;&gt;zathura&lt;/a&gt; for pdfs&lt;br&gt;&#xA;&lt;a href=&#34;https://koreader.rocks/&#34;&gt;koreader&lt;/a&gt; and &lt;a href=&#34;https://www.vim.org&#34;&gt;vim&lt;/a&gt; for viewing all other documents&lt;br&gt;&#xA;and create/edit them with &lt;a href=&#34;https://gnu.org/software/groff/&#34;&gt;groff&lt;/a&gt; or &lt;a href=&#34;https://www.latex-project.org/&#34;&gt;LaTeX&lt;/a&gt;&lt;br&gt;&#xA;or &lt;a href=&#34;https://libreoffice.org/&#34;&gt;Libre-Office&lt;/a&gt; suite for more complex documents&lt;br&gt;&#xA;I also use &lt;a href=&#34;https://calibre-ebook.com/&#34;&gt;Calibre&lt;/a&gt; to manage my eBooks collection.&lt;/p&gt;&#xA;&lt;h2 id=&#34;audio&#34;&gt;Audio&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.videolan.org/vlc/&#34;&gt;Vlc&lt;/a&gt; &amp;amp; &lt;a href=&#34;https://mpv.io/&#34;&gt;mpv&lt;/a&gt; to listen to them.&lt;br&gt;&#xA;&lt;a href=&#34;https://ffmpeg.org/&#34;&gt;ffmpeg&lt;/a&gt; to record audio from my mic.&lt;br&gt;&#xA;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp&lt;/a&gt; To download local mp3 files of my favorite music (if it&amp;rsquo;s not being sold as mp3)&lt;/p&gt;&#xA;&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/Sxiv&#34;&gt;sxiv&lt;/a&gt; to view them.&#xA;and &lt;a href=&#34;https://www.darktable.org/&#34;&gt;DarkTable&lt;/a&gt; since i use a real camera to take pictures.&#xA;&lt;a href=&#34;https://krita.org/&#34;&gt;krita&lt;/a&gt; if i wanted to draw on a screen.&lt;/p&gt;&#xA;&lt;h2 id=&#34;videos&#34;&gt;Videos&lt;/h2&gt;&#xA;&lt;p&gt;Vlc to view them.&lt;br&gt;&#xA;usually ffmpeg to record my screen,&lt;br&gt;&#xA;(or &lt;a href=&#34;https://obsproject.com/&#34;&gt;OBS&lt;/a&gt; to do more complex screen capture)&lt;br&gt;&#xA;&lt;a href=&#34;https://kdenlive.org/en/&#34;&gt;kdenlive&lt;/a&gt; if i  ever wanted to edit them&lt;/p&gt;&#xA;&lt;h2 id=&#34;e-communication&#34;&gt;E-Communication&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.mutt.org/&#34;&gt;mutt&lt;/a&gt;, a minimal email client.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://weechat.org/&#34;&gt;weechat&lt;/a&gt; for irc and xmpp chatrooms.&#xA;(use xmpp/matrix/irc/mastodon/Misskey.\ Anything except proprietary software such as whatsapp/telegram/discord)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;browser&#34;&gt;Browser&lt;/h2&gt;&#xA;&lt;p&gt;I usually have three browsers:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.elinks.cz/&#34;&gt;elinks&lt;/a&gt; when i&amp;rsquo;m on a tty&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.netsurf-browser.org/&#34;&gt;netsurf&lt;/a&gt; for my general browsing (it&amp;rsquo;s very fast)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.mozilla.org/en-US/firefox/enterprise/&#34;&gt;firefox-esr&lt;/a&gt; when a website doesn&amp;rsquo;t work on first 2.&lt;br&gt;&#xA;(Note: Firefox usually comes with sub-par default settings, which requires modifiying user.js, about:config, and more hardwork to make it fully private. It is still the best usable browser compared to all other demonic corporation spyware&amp;amp;bloatware browsers such as google-chrome or edge.)&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.torproject.org/&#34;&gt;tor&lt;/a&gt; to bypass isp/government censorship or dmca-takedowns&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;rss&#34;&gt;RSS&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://newsboat.org/&#34;&gt;newsboat&lt;/a&gt; if i&amp;rsquo;m on a tty,&lt;br&gt;&#xA;or &lt;a href=&#34;https://quiterss.org/&#34;&gt;QuiteRSS&lt;/a&gt; if I have a mouse&lt;/p&gt;&#xA;&lt;h2 id=&#34;downloading-clients&#34;&gt;Downloading Clients&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://curl.se/&#34;&gt;cURL&lt;/a&gt; for simple urls&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://qbittorrent.org/&#34;&gt;qbittorent&lt;/a&gt; for torrents&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yt-dlp/yt-dlp&#34;&gt;yt-dlp&lt;/a&gt; for downloading YouTube videos&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;password-manager&#34;&gt;Password manager&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://keepassxc.org/&#34;&gt;keepass-xc&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;refrences-to-find-other-such-software&#34;&gt;Refrences to find other such software&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://suckless.org/rocks/&#34;&gt;The suckless website&amp;rsquo;s list of programs that &amp;ldquo;rock&amp;rdquo; – Generally minimalist programs&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/mayfrost/guides/blob/master/ALTERNATIVES.md&#34;&gt;A more comprehensive (and gradient) list of minimalist software&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://directory.fsf.org/wiki/Main_Page&#34;&gt;The FSF&amp;rsquo;s Free Software Directory&lt;/a&gt; – Emphasis on libre software.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wiki.installgentoo.com/index.php/List_of_recommended_GNU/Linux_software&#34;&gt;Install Gentoo wiki recommendations&lt;/a&gt; – A good mix of programs for novices and advanced users.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;</description>
          </item>
          <item>
            <title>Arduino IDE Morse Code Library</title>
            <link>https://nithitsuki.com/incomplete-projects/arduino-ide-morse-code-transmitter/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            <guid>https://nithitsuki.com/incomplete-projects/arduino-ide-morse-code-transmitter/</guid>
            <description>&lt;h2 id=&#34;the-simplest-and-most-well-documented-morse-code-library-for-the-arduino-ide&#34;&gt;The Simplest and most well documented Morse Code Library for the Arduino IDE!&lt;/h2&gt;&#xA;&lt;p&gt;wanna skip to the installation? scroll down you lazy.&#xA;&lt;br style=&#34;line-height: 1.9em;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;hahahugoshortcode17s1hbhb-how-it-all-started-a-memoir&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; How it all started (a memoir)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;When I joined Amrita University in fall 2024, one of my first memories was a hackathon called Electronika—an overnight event with Arduinos, late-night coffee, and a cool prize pool. Though I never participated (^_^;), it’s how I met two friends. One of them teamed up with me to practice, compete, and (hopefully) win.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;hahahugoshortcode17s2hbhb-the-spark-for-the-library&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; The Spark for the Library&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;My teammate was seriously dedicated to the hackathon, borderline scary levels of focus. Inspired, I brought my Arduino to campus, and during practice, we had the idea to transmit Morse code—something simple like SOS. That’s when I thought of creating functions to generalize Morse code transmission, like a library. I went home, whipped up dot(), dash(), and char_to_morse() for lowercase letters, and threw it on GitHub for a few months.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;hahahugoshortcode17s3hbhb--a-semester-later&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  A Semester Later&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Fast forward to the end of the semester. With a determination to finish something for once, I decided to revisit my simple code. I polished it up (re-wrote the entire thing from scratch), added lots of features, documented it thoroughly, and made sure it was easy for anyone to use.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;hahahugoshortcode17s4hbhb--the-result-my-first-ever-tech-project&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  The Result: My First Ever Tech Project&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;And here we are! I’m proud to say that this is the only Morse code library for Arduino I know of, which is both easy to install, well-documented, and simple to use. It might not have been a huge technical challenge, but the real victory for me was in finishing it and ending up with a polished product—a far cry from the rough draft it started as.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;hahahugoshortcode17s5hbhb--looking-ahead&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  Looking Ahead&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;This project was my first real tech endeavor, and while I’ve still got plenty of unfinished projects on my website (as you can see in the projects page!), this is one that I’m proud of. I hope this library helps you as much as it’s helped me, and I look forward to finishing the rest of my projects the same way!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br style=&#34;line-height: 1.9em;&#34;&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;about-the-library&#34;&gt;About the Library&lt;/h2&gt;&#xA;&lt;p&gt;This library is designed to be as simple as possible while still providing everything you need to send Morse code signals reliably and efficiently. Whether you&amp;rsquo;re a beginner or an experienced maker, this library can help you quickly get your Morse code project up and running.&lt;/p&gt;&#xA;&lt;br style=&#34;line-height: 1.9em;&#34;&gt;&#xA;&lt;h2 id=&#34;key-features&#34;&gt;Key Features:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Pin Control&lt;/strong&gt;: Set the pin that will output Morse code signals.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Adjustable Speed&lt;/strong&gt;: Easily control the speed of the transmission using Words Per Minute (WPM).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;String Transmit&lt;/strong&gt;: Convert entire strings into Morse code and transmit them through the Arduino pin.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Character Transmit&lt;/strong&gt;: transmit single characters through the Arduino pin.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br style=&#34;line-height: 1.9em;&#34;&gt;&#xA;&lt;h2 id=&#34;how-to-install-the-library&#34;&gt;How to Install the Library:&lt;/h2&gt;&#xA;&lt;p&gt;To get started with the Morse Code Library:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Go to the &lt;strong&gt;Arduino IDE&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Navigate to &lt;strong&gt;Sketch &amp;gt; Add File&amp;hellip;&lt;/strong&gt; and select the &lt;strong&gt;Morse.h&lt;/strong&gt; file &lt;br&gt;&#xA;which you should download from the &lt;a href=&#34;https://github.com/nithitsuki/Arduino-IDE-Morse-Code/releases/latest&#34;&gt;Github Release page (click me)&lt;/a&gt; or &lt;a href=&#34;https://nithitsuki.com/Morse.h&#34;&gt;Here (click me)&lt;/a&gt;, Make sure to download the Morse.h file (as a .h file, and not a text file) if your browser decides to display it&lt;/li&gt;&#xA;&lt;li&gt;That’s it! No complicated installations or setup steps.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;usage&#34;&gt;Usage:&lt;/h2&gt;&#xA;&lt;h2 id=&#34;setting-up-your-project&#34;&gt;Setting Up Your Project&lt;/h2&gt;&#xA;&lt;p&gt;The library comes with predefined variables that allow for easy customization. Here’s how to use it:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Set the Morse Code Pin:&lt;/strong&gt;&lt;br&gt;&#xA;The output pin for Morse code transmission is set by the &lt;code&gt;MORSE_PIN&lt;/code&gt; variable.&lt;br&gt;&#xA;It’s already predefined in the &lt;code&gt;Morse.h&lt;/code&gt; file, so please dont try to redefine it. (int MORSE_pin)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//Set the pin that will output the Morse code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;MORSE_PIN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//Make Sure to set said morse pin to output&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;pinMode(MORSE_PIN, OUTPUT);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Set the Transmission Speed:&lt;/strong&gt;&lt;br&gt;&#xA;The &lt;code&gt;UNIT_TIME&lt;/code&gt; variable defines the speed of the Morse code transmission in milliseconds.&lt;br&gt;&#xA;The dot (or &amp;ldquo;dit&amp;rdquo;) duration is calculated based on the formula &lt;code&gt;1200 / wpm&lt;/code&gt;, where &lt;code&gt;wpm&lt;/code&gt; is the speed in Words Per Minute.&#xA;The default speed is already defined, so there’s no need to manually adjust it. However, you can change the speed if needed.&lt;br&gt;&#xA;&lt;strong&gt;WARNING&lt;/strong&gt;: Do &lt;strong&gt;not&lt;/strong&gt; redefine UNIT_TIME in your sketch. The variable is already set in the header.&#xA;&lt;strong&gt;WARNING&lt;/strong&gt;: Its value must NOT be lower than 0&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Adjust the time of the dot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// (unit time in milliseconds)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;UNIT_TIME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;150&lt;/span&gt;; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h2 id=&#34;core-functions&#34;&gt;Core Functions&lt;/h2&gt;&#xA;&lt;p&gt;The library offers a few core functions that make transmitting Morse code easy and efficient:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;dot(int n)&lt;/strong&gt;&lt;br&gt;&#xA;This function sends a dot (dit) signal for a specified number of repetitions.&lt;br&gt;&#xA;The parameter &lt;code&gt;n&lt;/code&gt; must be greater than or equal to 1.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;dash(int n)&lt;/strong&gt;&lt;br&gt;&#xA;This function sends a dash (dah) signal for a specified number of repetitions.&lt;br&gt;&#xA;Again, the parameter &lt;code&gt;n&lt;/code&gt; must be greater than or equal to 1.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;char_to_morse(char c)&lt;/strong&gt;&lt;br&gt;&#xA;This function converts a single character into its corresponding Morse code and transmits it.&lt;br&gt;&#xA;It works for both uppercase and lowercase letters, digits, and spaces.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;string_to_morse(String mCode)&lt;/strong&gt;&lt;br&gt;&#xA;This function converts an entire string into Morse code and sends it character by character.&lt;br&gt;&#xA;It automatically handles spaces between words, which are represented by a longer pause.&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;example-code&#34;&gt;Example Code&lt;/h3&gt;&#xA;&lt;p&gt;Here’s a simple example that demonstrates how to use the library to send Morse code:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;#34;Morse.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// Set the output pin and transmission speed&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// Pin 13 will output the Morse signals&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; MORSE_PIN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;//Make Sure to set said morse pin to output&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; pinMode(MORSE_PIN, OUTPUT);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Time of dot in milliseconds&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//UNIT_TIME = (1200 / wpm) (8wpm default)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; UNIT_TIME &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;150&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;loop&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// Send the string &amp;#34;HELLO WORLD&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; string_to_morse(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HELLO WORLD&amp;#34;&lt;/span&gt;); &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// This will repeatedly transmit &amp;#34;HELLO WORLD&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;explanation-of-the-code&#34;&gt;Explanation of the Code:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In the &lt;code&gt;setup()&lt;/code&gt; function, we configure the output pin (&lt;code&gt;MORSE_PIN&lt;/code&gt;) and the transmission speed (&lt;code&gt;UNIT_TIME&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;li&gt;The &lt;code&gt;loop()&lt;/code&gt; function continuously transmits the string &amp;ldquo;HELLO WORLD&amp;rdquo; using the &lt;code&gt;string_to_morse()&lt;/code&gt; function. Each character is converted to Morse code and transmitted one after another.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;supported-characters&#34;&gt;Supported Characters&lt;/h3&gt;&#xA;&lt;p&gt;This library supports the following characters:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Letters&lt;/strong&gt;: &lt;code&gt;a-z&lt;/code&gt; (both uppercase and lowercase)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Digits&lt;/strong&gt;: &lt;code&gt;0-9&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Space&lt;/strong&gt;: Used to represent a word space in Morse code.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;few special chaarcters&lt;/strong&gt; . , ? &amp;rsquo; ! / ( ) &amp;amp; : ; = + - \ &amp;quot; $ _&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;conclusion-tldr&#34;&gt;Conclusion (TL;DR)&lt;/h3&gt;&#xA;&lt;p&gt;My first project, proud of it, easy to use, email if any doubts&lt;/p&gt;&#xA;&lt;p&gt;Feel free to check out the source code on &lt;a href=&#34;https://github.com/nithitsuki/Arduino-IDE-Morse-Code&#34;&gt;GitHub (click me)&lt;/a&gt;,&lt;br&gt;&#xA;I’d love to see the projects you create with it! Please share them with me if you can.&lt;/p&gt;&#xA;</description>
          </item>
          <item>
            <title>Connect to WiFi from Linux command line</title>
            <link>https://nithitsuki.com/tutorials/connect-to-wifi-from-linux-command-line-for-newbies/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
            <guid>https://nithitsuki.com/tutorials/connect-to-wifi-from-linux-command-line-for-newbies/</guid>
            <description>&lt;h3 id=&#34;preface&#34;&gt;Preface&lt;/h3&gt;&#xA;&lt;p&gt;This method uses WPA_supplicant, for other methods involving iwctl and the alike, checkout &lt;a href=&#34;https://wiki.archlinux.org/title/Network_configuration/Wireless#iw&#34;&gt;this article&lt;/a&gt; on the Archwiki&lt;/p&gt;&#xA;&lt;h3 id=&#34;objective&#34;&gt;Objective&lt;/h3&gt;&#xA;&lt;p&gt;Configure and Connect to WiFi only using command line utilities.&lt;/p&gt;&#xA;&lt;h3 id=&#34;requirements&#34;&gt;Requirements&lt;/h3&gt;&#xA;&lt;p&gt;[Root access] or [access to sudo]&#xA;wpa_supplicant,net-tools and dhclient(or DHCPCD) aldready installed on your computer.&#xA;wifi support on your laptop/pc&lt;/p&gt;&#xA;&lt;h3 id=&#34;additonal-info&#34;&gt;additonal info&lt;/h3&gt;&#xA;&lt;p&gt;This guide will also go through some common problems while connecting to a WiFi. Look at the page-end if you face any issues&#xA;dhclient or DHCPCD are not required if you don&amp;rsquo;t want to connect to the internet or if you want to assign the ip adress manually&#xA;wifi is not necessary since you can configure the software and connect later&#xA;you can also look up more resources and documents about the software used in this article from the sources listed below&lt;/p&gt;&#xA;&lt;h3 id=&#34;conventions&#34;&gt;Conventions&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;# requires given linux commands to be executed with root privileges either directly as a root user or by the use of sudo command&lt;/li&gt;&#xA;&lt;li&gt;$ - given linux commands &lt;em&gt;can&lt;/em&gt; be executed as a regular non-privileged user&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;1-finding-your-wifi-card-name&#34;&gt;1. Finding your wifi card name&lt;/h4&gt;&#xA;&lt;p&gt;First, you need to find the name of your physical wifi card. You can do that by typing&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ ip link&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;this will list out the connected network devices&lt;/p&gt;&#xA;&lt;p&gt;in my case it&amp;rsquo;s called &amp;ldquo;wlp0s20f3&amp;rdquo; because &amp;ldquo;lo&amp;rdquo; is loopback which is just an important placeholder card and eno1 is my ethernet port&lt;/p&gt;&#xA;&lt;p&gt;and in your case, your wifi card probably starts with &amp;ldquo;w&amp;rdquo; as well, so just make sure which one is your wifi card.&lt;/p&gt;&#xA;&lt;p&gt;(If for some reason you can&amp;rsquo;t find your wifi card, try checking out the troubleshooting part before you continue)&lt;/p&gt;&#xA;&lt;h4 id=&#34;2-turning-on-your-wifi-card&#34;&gt;2. Turning on your wifi card&lt;/h4&gt;&#xA;&lt;p&gt;Now, you have to see if your wifi card is turned on by linux&#xA;You can check that by running &amp;ldquo;$ ifconfig&amp;rdquo; which will show your current active network devices.&lt;/p&gt;&#xA;&lt;p&gt;If your card doesnt appear here, it means it is turned off.&#xA;To turn it on just type &amp;ldquo;# ifconfig [your wifi card name] up&amp;rdquo;. you can check again by typing &amp;ldquo;$ ifconfig&amp;rdquo;.&lt;/p&gt;&#xA;&lt;p&gt;Now that the wifi card is turned on and ready to use. All you need to do now is just connect it to your wifi.&lt;/p&gt;&#xA;&lt;h4 id=&#34;3-configuring-wpa_supplicant&#34;&gt;3. Configuring wpa_supplicant&lt;/h4&gt;&#xA;&lt;p&gt;Now, you have to configure wpa_supplicant(the main program used to connect you to wifi).&#xA;First you need to make the configuration file, you can do that by touching it&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# touch etc/wpa_supplicant/wpa_supplicant-wlp0s20f3.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;you can replace wlp0s20f3 with your wifi card name.&#xA;now just edit the configuration file using a text editor like nano or vim(any text editor will do)&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# nano etc/wpa_supplicant/wpa_supplicant-wlp0s20f3.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;and add these two lines (all are small letters)&lt;/p&gt;&#xA;&lt;p&gt;ctrl_interface=run/wpa_supplicant&lt;/p&gt;&#xA;&lt;p&gt;update_config=1&lt;/p&gt;&#xA;&lt;p&gt;and save and exit nano by pressing ctrl + O and then ctrl + X&lt;/p&gt;&#xA;&lt;h4 id=&#34;4-adding-your-wifi-credentials&#34;&gt;4. Adding your wifi credentials&lt;/h4&gt;&#xA;&lt;p&gt;To add your wifi name and password, just&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# wpa_passphrase your_wifi_name your_wifi_password &amp;gt;&amp;gt; etc/wpa_supplicant/wpa_supplicant-wlp0s20f3.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;if your wifi name has spaces in it, put them inside &amp;quot;&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;you can check if the changes were made by editing the configuration file again.&#xA;If you made a mistake then delete the newly added lines and run the command again&lt;/p&gt;&#xA;&lt;h4 id=&#34;5-connecting-to-wifi-finally&#34;&gt;5. Connecting to wifi! Finally&lt;/h4&gt;&#xA;&lt;p&gt;you can connect to your wifi by running,&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;wpa_supplicant -i [your wifi card name] -c etc/wpa_supplicant/wpa_supplicant-wlp6s0.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Now, you should be connected to your wifi!&lt;/p&gt;&#xA;&lt;p&gt;also, you can use options like -B to make it run in the background&lt;/p&gt;&#xA;&lt;p&gt;and option -qq to make it look more neat.&lt;/p&gt;&#xA;&lt;p&gt;For more options, read the man page of wpa_supplicant ($ man wpa_supplicant)&lt;/p&gt;&#xA;&lt;h4 id=&#34;6-connecting-to-the-internet&#34;&gt;6. Connecting to the internet.&lt;/h4&gt;&#xA;&lt;p&gt;now Just type&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;dhclient [your wifi card name]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;note: you can use DHCPCD instead of dhclient&lt;/p&gt;&#xA;&lt;p&gt;Sources:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://youtu.be/QGyHDIYlLFA&#34;&gt;4-eyed-cat man&amp;rsquo;s tutorial&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://linux.die.net/man/8/wpa_supplicant&#34;&gt;wpa_supplicant manual&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h3&gt;&#xA;&lt;p&gt;ERROR: operation not permited, FIX: run it as root&lt;/p&gt;&#xA;&lt;p&gt;ERROR: permission denied, FIX: run it as root&lt;/p&gt;&#xA;&lt;p&gt;ERROR: wlan softblocked, FIX: try &amp;ldquo;# rfkill unblock wlan&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;PROBLEM: Couldn&amp;rsquo;t find my wifi card&lt;/p&gt;&#xA;&lt;p&gt;SOLUTION:&#xA;You may not have the required wifi drivers installed on your system,&#xA;In arch and arch based linux distributions try downloading linux-firmware (# pacman -Sy linux-firmware).&#xA;In Debian/Ubuntu based distro&amp;rsquo;s try downloading the firmware-iwlwifi and firmware-realtek package(might need to add some repo&amp;rsquo;s)&#xA;or try downloading the intel wifi drivers for linux and extracting the .ucode to /lib/firmware.&#xA;In gentoo or any other linux distribution, try extracting the wifi drivers to /lib/firmware or compile the firmware into your kernel&#xA;In any case, a Reboot is highly recommended&lt;/p&gt;&#xA;</description>
          </item>
  </channel>
</rss>